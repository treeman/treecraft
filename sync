#!/usr/bin/perl

use autodie;
use Modern::Perl;
use File::Basename;
use Getopt::Long;
use POSIX qw(strftime);

my $bucket = "www.treecraft.se";

my $server = "198.24.166.242";
my $world = "treecraft";
my $world_save_dir = "_world";

my $help;
my $sync_world;
my $build;

GetOptions(
    'help|h' => \$help,
    'world' => \$sync_world,
    'build' => \$build,
);

# Fetch path to current directory
my $root = dirname(__FILE__);
my $site = "_site";

if ($help) {
    help();
}

sync_world() if $sync_world;
build() if $build || $sync_world;
sync_site();

say "DONE at " . strftime("%a, %d %b %Y %H:%M:%S %z", localtime(time()));

sub sync_world {
    say "Syncing world...\n";

    say "Making world.";

    my $clone_dir = "$root/world/";
    mkdir $clone_dir unless -d $clone_dir;

    say "Cloning...";
    system("wget -m \"ftp://$server/$world\" -P $clone_dir -nH 2>&1");

    my $world_dir = "$clone_dir$world";
    my $save_dir = "$root/$world_save_dir";

    say "Generating config";
    my $conf_file = make_config ($world_dir, $save_dir);
    say "Config file: $conf_file";

    say "Generating world...";
    #system ("/home/tree/bin/overviewer.py $world_dir $save_dir");
    system ("/home/tree/bin/overviewer.py --config=$conf_file");

    say "Done!";
}

sub build {
    say "Building site...\n";
    system("cd $root && ./site rebuild 2>&1");
}

sub sync_site {
    say "Syncing site...\n";

    # Sync css (cache: 1 week)
    say "Syncing css";
    sync ("$site/css", "max-age=604800", "-m text/css");
    sync ("$site/*.css", "max-age=604800", "-m text/css");

    # Sync rest (cache: 1 hour)
    say "Syncing rest";
    sync ("$site/", "max-age=3600, must-revalidate");

    say "Removing deleted";
    sync ("$site/", "", "--delete-removed");
}

sub sync {
    my ($dir, $cache, $option) = @_;

    my $header = "";
    $header = "--add-header=\"Cache-Control: $cache\"" if $cache;

    $option = "" unless $option;

    my $cmd = "s3cmd sync $option --acl-public $header $root/$dir s3://$bucket/";
    system("$cmd 2>&1");
}

sub make_config {
    my ($world_dir, $output_dir) = @_;

    my $config = <<END;
worlds["treecraft"] = "$world_dir"

renders["day"] = {
    "world": "treecraft",
    "title": "Day",
    "rendermode": normal,
    "dimension": "overworld",
}

renders["nether"] = {
    "world": "treecraft",
    "title": "Nether",
    "rendermode": nether,
    "dimension": "nether",
}

outputdir = "$output_dir"
END

    my $file = "$root/world_conf.py";

    open my $out, '>', $file;
    print $out $config;
    close $out;

    return $file;
}

